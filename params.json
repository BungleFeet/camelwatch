{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"Camelwatch\r\n==========\r\n\r\nCamelwatch is an open source project that provides a fully featured web console for the <a href=\"http://camel.apache.org/\">Apache Camel</a> project. Camelwatch can monitor any remote camel instance by using the JMX hooks that camel provides.\r\n\r\n\r\nFeatures\r\n========\r\n\r\n* Browsable context, endpoints, consumers, producers, routes, error handlers.\r\n* Viewable statistics on each of the above beans\r\n* Deploy as WAR in an existing tomcat, or incorporate into your own deployable as a set of spring beans\r\n* Accesses any camel instance remotely using JMX\r\n\r\nInstallation\r\n============\r\n\r\nInstallation is extremely simple. Download the <a href=\"https://github.com/downloads/sksamuel/camelwatch/camelwatch-0.3.war\">latest war</a> and deploy into any running tomcat container. After tomcat deploys the application edit the /<warname>/WEB-INF/classes/camelwatch.properties file. Replace the jmx.endpoint property with the URL of the JMX endpoint for the camel instance you want to monitor. Restart tomcat and then browse to /<warname> and you should be good to go.\r\n\r\nRest\r\n====\r\n\r\nCamelwatch includes a set of REST services. These are accessible at the following URLs, where contextPath should be replaced with your deployed app name (usually camelwatch)\r\n\r\n* /contextPath/rest/consumer\r\n* /contextPath/rest/consumer/{consumerName}\r\n* /contextPath/rest/context\r\n* /contextPath/rest/context/{contextName}\r\n* /contextPath/rest/endpoint\r\n* /contextPath/rest/endpoint/{endpointName}\r\n* /contextPath/rest/route\r\n* /contextPath/rest/route/{routeName}\r\n* /contextPath/rest/errorHandler\r\n* /contextPath/rest/errorHandler/{errorHandlerName}\r\n* /contextPath/rest/processor\r\n* /contextPath/rest/processor/{processorName}\r\n\r\nRoadmap\r\n=======\r\n\r\n* Add ability to upload a message for processing through a route\r\n* Add tracing outputs\r\n* Graph visualizations of camel routes\r\n* Speed optimisations\r\n* Thread pool views\r\n* Service bean views\r\n* Configure routes at runtime (like the camel web console)\r\n* More... please add issues to the issue tracker\r\n \r\nScreenshots\r\n===========\r\n\r\n<img src=\"https://github.com/downloads/sksamuel/camelwatch/ss1.png\"/> <img src=\"https://github.com/downloads/sksamuel/camelwatch/ss2.png\"/>","tagline":"","name":"Camelwatch"}